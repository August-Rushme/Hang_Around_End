<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.august.hang_around.mapper.UGoodsMapper">
  <resultMap id="BaseResultMap" type="com.august.hang_around.domain.UGoods">
    <id column="gid" jdbcType="BIGINT" property="gid" />
    <result column="gname" jdbcType="VARCHAR" property="gname" />
    <result column="gtype" jdbcType="VARCHAR" property="gtype" />
    <result column="gprice" jdbcType="VARCHAR" property="gprice" />
    <result column="gstock" jdbcType="VARCHAR" property="gstock" />
    <result column="uid" jdbcType="INTEGER" property="uid" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    gid, gname, gtype, gprice, gstock, `uid`
  </sql>
  <select id="selectByExample" parameterType="com.august.hang_around.domain.UGoodsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from u_goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from u_goods
    where gid = #{gid,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from u_goods
    where gid = #{gid,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.august.hang_around.domain.UGoodsExample">
    delete from u_goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.august.hang_around.domain.UGoods">
    insert into u_goods (gid, gname, gtype, 
      gprice, gstock, `uid`
      )
    values (#{gid,jdbcType=BIGINT}, #{gname,jdbcType=VARCHAR}, #{gtype,jdbcType=VARCHAR}, 
      #{gprice,jdbcType=VARCHAR}, #{gstock,jdbcType=VARCHAR}, #{uid,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.august.hang_around.domain.UGoods">
    insert into u_goods
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="gid != null">
        gid,
      </if>
      <if test="gname != null">
        gname,
      </if>
      <if test="gtype != null">
        gtype,
      </if>
      <if test="gprice != null">
        gprice,
      </if>
      <if test="gstock != null">
        gstock,
      </if>
      <if test="uid != null">
        `uid`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="gid != null">
        #{gid,jdbcType=BIGINT},
      </if>
      <if test="gname != null">
        #{gname,jdbcType=VARCHAR},
      </if>
      <if test="gtype != null">
        #{gtype,jdbcType=VARCHAR},
      </if>
      <if test="gprice != null">
        #{gprice,jdbcType=VARCHAR},
      </if>
      <if test="gstock != null">
        #{gstock,jdbcType=VARCHAR},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.august.hang_around.domain.UGoodsExample" resultType="java.lang.Long">
    select count(*) from u_goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update u_goods
    <set>
      <if test="record.gid != null">
        gid = #{record.gid,jdbcType=BIGINT},
      </if>
      <if test="record.gname != null">
        gname = #{record.gname,jdbcType=VARCHAR},
      </if>
      <if test="record.gtype != null">
        gtype = #{record.gtype,jdbcType=VARCHAR},
      </if>
      <if test="record.gprice != null">
        gprice = #{record.gprice,jdbcType=VARCHAR},
      </if>
      <if test="record.gstock != null">
        gstock = #{record.gstock,jdbcType=VARCHAR},
      </if>
      <if test="record.uid != null">
        `uid` = #{record.uid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update u_goods
    set gid = #{record.gid,jdbcType=BIGINT},
      gname = #{record.gname,jdbcType=VARCHAR},
      gtype = #{record.gtype,jdbcType=VARCHAR},
      gprice = #{record.gprice,jdbcType=VARCHAR},
      gstock = #{record.gstock,jdbcType=VARCHAR},
      `uid` = #{record.uid,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.august.hang_around.domain.UGoods">
    update u_goods
    <set>
      <if test="gname != null">
        gname = #{gname,jdbcType=VARCHAR},
      </if>
      <if test="gtype != null">
        gtype = #{gtype,jdbcType=VARCHAR},
      </if>
      <if test="gprice != null">
        gprice = #{gprice,jdbcType=VARCHAR},
      </if>
      <if test="gstock != null">
        gstock = #{gstock,jdbcType=VARCHAR},
      </if>
      <if test="uid != null">
        `uid` = #{uid,jdbcType=INTEGER},
      </if>
    </set>
    where gid = #{gid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.august.hang_around.domain.UGoods">
    update u_goods
    set gname = #{gname,jdbcType=VARCHAR},
      gtype = #{gtype,jdbcType=VARCHAR},
      gprice = #{gprice,jdbcType=VARCHAR},
      gstock = #{gstock,jdbcType=VARCHAR},
      `uid` = #{uid,jdbcType=INTEGER}
    where gid = #{gid,jdbcType=BIGINT}
  </update>
</mapper>